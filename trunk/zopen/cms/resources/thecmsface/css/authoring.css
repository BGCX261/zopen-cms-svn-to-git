
    /* zrt-cssregistry: base_properties */
    /*
** Plone style sheet - Authoring Elements
**
** Style sheet documentation can be found at http://plone.org/documentation
**
** You should preferrably use ploneCustom.css to add your own CSS classes and to
** customize your portal, as these are the base fundaments of Plone, and will
** change and be refined in newer versions. Keeping your changes in
** ploneCustom.css will make it easier to upgrade.
**
** Feel free to use whole or parts of this for your own designs, but give credit
** where credit is due.
**
*/

/* <dtml-with base_properties (do not remove this :) */
/* <dtml-call "REQUEST.set('portal_url', portal_url())" (not this either :) */

/* Editable border */

.contentViews {
background-color: transparent;
padding-left: 1em;
line-height: normal;
margin: 0;
list-style: none;
border: borderWidth borderStyle contentViewBorderColor;
border-top-width: 0px;
border-left-width: 0px;
border-right-width: 0px;
}
.contentViews li {
display: inline;
padding-top: 0.5em;
}
.contentViews li a {
background-color: transparent;
border: borderWidth borderStyle contentViewBorderColor;
border-style: borderStyle;
color: contentViewFontColor;
height: auto;
margin-right: 0.5em;
padding: 0em 1em;
line-height: normal;
text-decoration: none;
text-transform: textTransform;
z-index: 1;
}
.contentViews .selected a {
background-color: contentViewBackgroundColor;
background-color: yellow;
border-bottom: contentViewBackgroundColor borderWidth borderStyle;
color: contentViewFontColor;
}
.contentViews li a:hover {
background-color: contentViewBackgroundColor;
color: contentViewFontColor;
}
.configlet .contentViews {
font-size: 90%;
}

/*
** begin ECMAScript Content Action Menus
*/
.contentActions {
background-color: contentViewBackgroundColor;
border-left: borderWidth borderStyle contentViewBorderColor;
border-right: borderWidth borderStyle contentViewBorderColor;
color: contentViewFontColor;
text-align: right;
text-transform: textTransform;
padding: 0 0 0 1em;
z-index: 2;
position:relative;
height: 1.6em;
}
.contentActions ul,
.contentActions li {
margin: 0;
list-style: none;
list-style-image: none;
color: fontColor;
text-align: left;
line-height: 1.6em;
}
.contentActions li {
float: right;
z-index: 4;
border-left: borderWidth borderStyle contentViewBorderColor;
}
.contentActions a {
text-decoration: none;
color: contentViewFontColor;
padding: 0 0.5em;
cursor: pointer;
}
.contentActions span.subMenuTitle {
padding: 0em 0.5em;
position: relative;
white-space: nowrap;
display: inline;
}
.contentActions a span.subMenuTitle {
padding: 0px;
display: inline;
}
.actionMenu {
/*  The spec says we can't put this on an element with a float (although
Opera is the only one that cares) and we need it in order to catch
the position:absolute bubbling up */

position: relative;
margin: 0;
padding: 0;
}
.actionMenu .actionMenuHeader {
margin: 0;
padding: 0;
font-weight: normal;
}
.actionMenu.activated .actionMenuHeader {
position: relative;
z-index: 10;
}
.actionMenu .actionMenuHeader a {
display: block;
}
.arrowDownAlternative {
font-size: 0.85em;
}
.actionMenu .actionMenuContent {
display: none;
z-index: 5;
position: absolute;
top: 1.6em;
right: -1px;
height: auto;
padding: 0;
margin: 0;
}
.actionMenu.activated .actionMenuContent {
display: block !important;
}
.actionMenu.activated .actionMenuContent {
/* this one will be ignored by IE, it is here to fix the cut-off error in
Firefox */
display: table !important;
border-collapse: collapse;
border-spacing: 0;
}
.actionMenu.deactivated .actionMenuContent {
display: none !important;
}
.actionMenu .actionMenuContent ul {
display: block;
background: contentViewBackgroundColor;
border: borderWidth contentViewBorderColor;
border-style: none borderStyle borderStyle borderStyle;
margin: -2px 0 0 0;
padding: 0;
}
.actionMenu .actionMenuContent li {
float: none;
background-color: transparent;
display: inline;
padding: 0;
margin: 0;
border: 0;
}
.actionMenu .actionMenuContent li a {
display: block;
white-space: nowrap;
margin: 0.2em 0;
}
.actionMenu .actionMenuContent .selected {
display: block;
white-space: nowrap;
padding: 0 0.5em;
margin: 0.2em 0;
}
.actionMenu .actionMenuContent li a:hover {
background-color: contentViewBorderColor;
color: White;
}
.actionMenu .actionMenuContent .actionSeparator a {
padding-top: 0.2em;
border-top: borderWidth borderStyle contentViewBorderColor;
}
#templateMenu li a {
padding-left: 16px;
}
/*
** end ECMAScript Content Action Menus
*/

ul.configlets {
margin: 1em 0;
list-style-image: none;
list-style: none;
}
ul.configlets li {
margin-bottom: 1em;
}
ul.configlets li a {
text-decoration: none;
border: none;
}
ul.configlets li a:visited {
color: linkColor;
background-color: transparent;
}
ul.configlets li a:active {
color: linkColor;
background-color: transparent;
}
ul.configlets li label {
font-weight: bold;
}
ul.configletDetails {
margin: 0em 1em 1em 4em;
list-style-image: none;
list-style: none;
}
ul.configletDetails li {
margin-bottom: 1em;
display: inline;
}
ul.configletDetails li a {
text-decoration: none;
}
ul.configletDetails li label {
font-weight: bold;
}
ul.configletDetails li.configletDescription {
display: block;
color: discreetColor;
font-size: fontSmallSize;
margin: 0;
}
/* Additional STX workaround classes */
.stx table p {
margin: 0;
padding: 0;
}
.stx table {
border: borderWidth borderStyle globalBorderColor ! important;
}
.stx table td {
border-bottom: borderWidth borderStyle globalBorderColor;
}

.reviewHistory,
.contentHistory {
display: inline;
font-size: 110% !important;
color: Black;
}
.comment {
background: evenRowBackgroundColor;
border: borderWidth borderStyleAnnotations globalBorderColor;
padding: 0.25em 1em 0.5em 1em;
margin-bottom: 1em;
}
.comment h1,
.comment h2,
.comment h3,
.comment h4,
.comment h5,
.comment h6 {
border-bottom: borderWidth borderStyleAnnotations discreetColor;
font-weight: normal;
}
.comment h3 a {
background-image: url(/discussionitem_icon.gif);
background-repeat: no-repeat;
padding-left: 18px;
margin-left: -1px;
margin-bottom: 1px;
min-height: 1.6em;
height: auto;
line-height: 1.6em;
}
.commentBody {
margin: 0 1em 1em 1em;
}
.spacer {
margin: 1em;
}

/* Collapsible elements */
dl.collapsible {
border: borderWidth borderStyle globalBorderColor !important;
margin: 1em 0 0 0;
padding: 0;
}
dl.collapsible dt.collapsibleHeader {
display: block;
float: left;
background: backgroundColor;
line-height: 1.2em;
vertical-align: middle;
font-size: 90%;
position: relative;
top: -0.6em;
width: auto;
margin: 0 0 -0.6em 1em;
padding: 0 0.5em;
}
dl.collapsible dd.collapsibleContent {
margin: 0;
padding: 0 1em;
clear: left;
}

/* for IE the following isn't needed, that's why the css2 selector is used */
dl.collapsible dd.collapsibleContent  dl {
margin: 0;
padding: 0;
}

dl.expandedInlineCollapsible dt.collapsibleHeader,
dl.expandedBlockCollapsible dt.collapsibleHeader {
padding: 0 6px 0 22px;
background: backgroundColor url(treeExpanded.gif) no-repeat 6px 50%;
cursor: pointer;
}

dl.collapsedBlockCollapsible {
border: none !important;
height: 1em;
width: auto;
}
dl.collapsedBlockCollapsible dt.collapsibleHeader {
float: none;
position: static;
margin: 0;
padding: 0 0 0 22px;
line-height: 1em;
background: transparent url(treeCollapsed.gif) no-repeat 6px 50%;
cursor: pointer;
}
dl.collapsedInlineCollapsible dd.collapsibleContent,
dl.collapsedBlockCollapsible dd.collapsibleContent {
display: none;
}
dl.collapsedInlineCollapsible {
border: none !important;
height: 1em;
width: auto;
display: inline;
}
dl.collapsedInlineCollapsible dt.collapsibleHeader {
position: static;
float: none;
margin: 0;
padding: 0 0 0 22px;
line-height: 1em;
background: transparent url(treeCollapsed.gif) no-repeat 6px 50%;
cursor: pointer;
display: inline;
}

.configlet .documentEditable {
padding: 0em !important;
}
.documentEditable .documentContent {
border: borderWidth borderStyle contentViewBorderColor;
padding: 0;
}
.label {
font-weight: bold;
display: inline;
padding-right: 0.5em;
}
.optionsToggle {
border: borderWidth borderStyle globalBorderColor;
color: fontColor;
background-color: globalBackgroundColor;
font-weight: normal !important;
font-size: fontSmallSize;
}
/* Used on all descriptions relevant to those not logged in */
.portalNotLoggedIn {}

#portal-column-content fieldset  * input:focus,
#portal-column-content fieldset  * textarea:focus {
border-color: notifyBorderColor;
border-width: borderWidth;
}

/* for highlighting of search terms */
.highlightedSearchTerm {
background-color: #ffa;
}

dl.searchResults .highlightedSearchTerm {
background-color: transparent;
font-weight: bold;
}
/* for greying out inherited roles */
.noInheritedRoles {
color: #a0a0a0;
}
/* for highlighting current items, like the language or today in the calendar */
.currentItem {
border-collapse: collapse;
border: 2px borderStyle notifyBorderColor;
padding: 1px;
}
/* for draggable elements */
tr.dragging td {
background-color: #ff6;
}
.draggingHook {
cursor: move;
}
.notDraggable {
}

.managePortletsLink {
display:  block;
color: discreetColor;
font-size: fontSmallSize;
font-weight: normal;
}
ul.formTabs {
position: relative;
display: block;
margin: 0 0 -2em 0;
padding: 0;
list-style-type: none;
text-align: center;
}
li.formTab {
display: inline;
margin: 0;
padding: 0;
}
li.formTab a {
/* this isn't supported by all browsers, so we keep it in a separate rule */
display: inline-block;
}
li.formTab a {
border-top: borderWidth borderStyle globalBorderColor;
border-bottom: borderWidth borderStyle globalBorderColor;
border-left: borderWidth dotted globalBorderColor;
background: backgroundColor;
margin: 0;
padding: 0.125em 0.75em;
text-decoration: none;
}
li.firstFormTab a {
border-left: borderWidth borderStyle globalBorderColor;
}
li.lastFormTab a {
border-right: borderWidth borderStyle globalBorderColor;
}
li.formTab a.selected {
background: globalBackgroundColor;
}
li.formTab a:hover {
background: globalBackgroundColor;
}
li.formTab a.notify {
background-color: notifyBackgroundColor;
color: fontColor;
}
li.formTab a.required span {
background-image: url(/required.gif);
background-position: center right;
background-repeat: no-repeat;
padding-right: 8px;
}
li.formTab a.notify:hover {
background-color: notifyBorderColor;
}
.formPanel {
padding: 1em 1em 1em 1em;
border: borderWidth borderStyle globalBorderColor;
}
.formPanel.hidden {
display: none;
}
div.formControls input.hidden {
display: none;
}

/* </dtml-with */
    
